#!/usr/bin/env php
<?php

$newVersion = trim($argv[1]);

$file = 'composer.json';
if ( !file_exists($file))
	$file = 'package.json';

$json = json_decode(file_get_contents($file));
$devVersion = trim($json->version);
if ( strlen($devVersion) == 0) {
	echo "`version` property not found in $file file." . PHP_EOL;
	exit;
}

echo $json->version . PHP_EOL;

if ( strlen($newVersion) == 0) {
	exit;
}

function json_encode_pretty($data, $extra_flags = 0, $exclude_flags = 0)
{
    // prettiest flags for: 7.3.9
    $flags = JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE | (defined("JSON_UNESCAPED_LINE_TERMINATORS") ? JSON_UNESCAPED_LINE_TERMINATORS : 0) | JSON_PRESERVE_ZERO_FRACTION | (defined("JSON_THROW_ON_ERROR") ? JSON_THROW_ON_ERROR : 0);
    $flags = ($flags | $extra_flags) & ~ $exclude_flags;
    return (json_encode($data, $flags));
}


// - push last changes
shell_exec('git add .; git commit -m "last changes"; git push origin master');

$releaseVersion = explode('-', $devVersion)[0];


// - update package file with release version
$json->version = $releaseVersion;
echo $json->version . ' ' . $devVersion . PHP_EOL;

file_put_contents($file, json_encode_pretty($json, 1, 1) . PHP_EOL);


// - commit with version name and push to remote
shell_exec('git add .; git commit -m "'. $releaseVersion .'"; git push origin master');


// - creating new tag in local with version name (or version number)
shell_exec('git tag -a ' . $releaseVersion . ' -m "' . $releaseVersion . '"');
// shell_exec('git tag -a ' . $releaseVersion);


// - push this tag to remote. it is similar to pushing a branch
shell_exec('git push origin ' . $releaseVersion);


// - update package file for next dev version
$json->version = $newVersion . '-dev';
file_put_contents($file, json_encode_pretty($json, 1, 1) . PHP_EOL);


// - commit last changes to master branch
shell_exec('git add .; git commit -m "'. $newVersion .'-dev"; git push origin master');



